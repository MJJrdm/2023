# Generated by Django 3.2.14 on 2022-07-29 08:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(help_text='puzzle month', verbose_name='puzzle month')),
                ('day', models.IntegerField(help_text='puzzle day', verbose_name='puzzle day')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'puzzle_calendar',
                'unique_together': {('month', 'day')},
            },
        ),
        migrations.CreateModel(
            name='PuzzlePieceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puzzle_num', models.CharField(help_text='puzzle number', max_length=20, verbose_name='puzzle number')),
                ('status_type', models.IntegerField(choices=[(0, 'Default Status'), (1, 'Default Rotate 90 Degrees'), (2, 'Default Rotate 180 Degrees'), (3, 'Default Rotate 270 Degrees'), (4, 'Flip status'), (5, 'Flip And Rotate 90 Degrees'), (6, 'Flip And Rotate 180 Degrees'), (7, 'Flip And Rotate 270 Degrees')], help_text='puzzle display status', verbose_name='puzzle display status')),
                ('shape', models.JSONField(help_text='puzzle deafult shape', verbose_name='puzzle default shape')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'puzzle_component_template',
                'unique_together': {('puzzle_num', 'status_type')},
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(help_text='player username', max_length=20, verbose_name='player username')),
                ('password', models.CharField(help_text='player password', max_length=30, verbose_name='player password')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'puzzle_player',
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(help_text='game name', max_length=20, verbose_name='game name')),
                ('status', models.IntegerField(choices=[(1, 'Game Ongoing'), (2, 'Game Pass'), (3, 'Game Abort')], help_text='game status', verbose_name='game status')),
                ('cell_status', models.CharField(help_text='game cell status', max_length=100, null=True, verbose_name='game cell status')),
                ('duration', models.DurationField(help_text='game duration', null=True, verbose_name='game duration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='player', to='games.player')),
                ('puzzle_calendar', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='puzzle_calendar', to='games.calendar')),
            ],
            options={
                'db_table': 'puzzle_game',
                'unique_together': {('game_name', 'player')},
            },
        ),
    ]
